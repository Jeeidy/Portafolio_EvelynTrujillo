/* GENERAL*/

@import url('https://fonts.googleapis.com/css2?family=Lora:wght@400;500;600&display=swap');

*{
    margin: 0; /*Elimina todas las márgenes*/
    padding: 0; /*Relleno, elimina todos los acolchados*/
}

body {
    font-family: "Lora", serif; /*Lista de familias de fuentes define la prioridad en la que el navegador debe elegir la familia de fuentes. Serif: todos los caracteres tienen terminaciones de trazo. */
}

html {
    scroll-behavior: smooth; /*Establece el comportamiento de un cuadro de desplazamiento cuando el desplazamiento lo activa la navegación o las API de desplazamiento CSSOM*/
}

p {
    color: gold; /*Establece un color*/
}

/*TRANSITION*/

a, .btn {
    transition: all 300ms ease; /*Proporciona una forma de controlar la velocidad de la animación al cambiar las propiedades de CSS*/
}

/*DESKTOP NAV*/

nav, .nav-links {
    display: flex; /*El elemento se convierte en un contenedor flexbox. Por si solo, se comporta como un elemento de bloque. Sus elementos secundarios se convertirán en elementos flexbox.*/
}

nav {
    justify-content: space-around; /*El espacio restante se distribuye alrededor de los elementos de flexbox/grid: esto agrega espacio antes del primer elemento y después del último*/
    align-items: center; /*Alinear elementos: Los elementos de flexbox están alineados en el centro del eje transversal. Por defecto, el eje transversal es vertical. Esto significa que los elementos de Flexbox estarán centrados verticalmente.*/
    height: 17vh; /*Define la altura del elemento*/
}

.nav-links {
    gap: 2rem; /*Establece los espacios (canalones) entre filas y columnas*/
    list-style: none; /*Estilo de lista*/
    font-size: 1.5rem; /*Tamaño de fuente. "Independiente del contexto"*/
}

a {
    color: black;
    text-decoration: none; /*Define cómo se adorna el contenido del texto del elemento. None: elimina cualquier decoración de texto.*/
    text-decoration-color: white; /*Establece el color de las decoraciones agregadas al texto*/
}

a:hover {
    color: grey;
    text-decoration: underline; /*Subraya el contenido del texto*/
    text-underline-offset: 1rem; /*Establece la distancia de desplazamiento de una línea decorativa de texto subrayado desde su posición original*/
    text-decoration-color: rgb(181, 181, 181);
}

.logo {
    font-size: 2rem;
}

.logo:hover{
    cursor: default; /*Establece el cursor del mouse al pasar el cursor sobre el elemento. Default: establece el cursor en el valor predeterminado del elemento. Para un enlace, sería un puntero. Para un texto sería un cursor de selección*/
}

/*HAMBURGER MENU*/

#hamburger-nav {
    display: none; /*Establece el comportamiento de visualización del elemento. None: el elemento se elimina por completo, como si no estuviera en el código HTML en primer lugar.*/
}

.hamburger-menu {
    position: relative; /*Define el comportamiento de posición del elemento. Relative: el elemento permanecerá en el flujo natural de la página. También posiciona el elemento: actuará como punto de anclaje para el bloque rosa absolutamente posicionado.*/
    display: inline-block; /*El elemento comparte propiedades de un elemento en línea y de bloque. Línea: el elemento se comporta como texto simple y se inserta en un bloque de texto. Bloquear: puedes aplicar height y width valores.*/
}

.hamburger-icon {
    display: flex;
    flex-direction: column; /*Define cómo se ordenan los elementos de flexbox dentro de un contenedor de flexbox. Column: están ordenados de la misma manera que la dirección del texto, a lo largo del eje transversal.*/
    justify-content: space-between; /*El espacio restante se distribuye entre los elementos flexbox/grid*/
    height: 24px;
    width: 30px; /*Define el ancho del elemento*/
    cursor: pointer; /*Puntero "dedo arriba"*/
}

.hamburger-icon span {
    width: 100%;
    height: 2px;
    background-color: black; /*Define el color del fondo del elemento*/
    transition: all 0.3 ease-in-out;
}

.menu-links {
    position: absolute; /*El elemento no permanecerá en el flujo natural de la página. Se posicionará según el ancestro más cercano. Debido a que está posicionado, actuará como un punto de anclaje para el bloque rosa absolutamente posicionado.*/
    top: 100%; /*Arriba: define la posición del elemento según su borde superior. Si el elemento está en una posición relativa, el elemento se moverá hacia abajo en la cantidad definida por el valor superior*/
    right: 0; /*Define la posición del elemento según su borde derecho*/
    background-color: white;
    width: fit-content;
    max-height: 0; /*Altura máxima*/
    overflow: hidden; /*Desbordamiento: define cómo se muestra el contenido desbordado tanto en el eje horizontal como en el vertical. Hidden: el contenido desbordado está oculto y no se puede acceder a él. */
    transition: all 0.3 ease-in-out;
}

.menu-links a {
    display: block; /*El elemento se convierte en un elemento de bloque: comienza en una nueva línea y ocupa todo el ancho.*/
    padding: 10px; /*Cuando se utiliza 1 valor, el relleno se establece para los 4 lados*/
    text-align: center; /*El contenido del texto está centrado*/
    font-size: 1.5rem;
    color: black;
    text-decoration: none;
    transition: all 0.3 ease-in-out;
}

.menu-links li {
    list-style: none;
}

.menu-links.open {
    max-height: 300px;
}

.hamburger-icon.open span:first-child {
    transform: rotate(45deg) translate(10px, 5px); /*Transform: define cómo se transforma el elemento. Rotate: gira el elemento.*/
}

.hamburger-icon.open span:nth-child(2) {
    opacity: 0; /*Opacidad: define qué tan opaco es el elemento. 0: totalmente transparente.*/
}

.hamburger-icon.open span:last-child {
    transform: rotate(-45deg) translate(10px, -5px);
}

.hamburger-icon span:first-child {
    transform: none; /*Elimina cualquier transformación*/
}

.hamburger-icon span:first-child {
    opacity: 1; /*Totalmente opaco*/
}

.hamburger-icon span:first-child {
    transform: none;
}

/*SECTIONS*/

section {
    padding-top: 4vh; /*Acolchado superior: define el espacio dentro del elemento, en la parte superior. */
    height: 96vh;
    margin: 0 10rem;
    box-sizing: border-box; /*Tamaño de caja: define cómo se calcula el ancho y alto del elemento: si incluyen el relleno y los border o no. border-box: el ancho y alto del elemento se aplican a todas las partes del elemento: el contenido, el relleno y los bordes.*/
    min-height: fit-content; /*Altura mínima*/
}

.section-container {
    display: flex;
}

/*PROFILE SECTION*/

#profile {
    display: flex;
    justify-content: center; /*Los elementos de flexbox/grid están centrados a lo largo del eje principal del contenedor*/
    gap: 5rem;
    height: 80vh;
}

.section__pic-container {
    display: flex;
    height: 400px;
    width: 400px;
    margin: auto 0;
}

.section__text {
    align-self: center;  /*Se aplica solo a un único elemento de flexbox, en lugar de a todos.*/
    text-align: center;
}

.section__text p {
    font-weight: 600; /*Peso de fuente. 600: semi negrita. Va de 100 a 900 */
}

.section__text__p1 {
    text-align: center;
}

.section__text__p2 {
    font-size: 1.75rem;
    margin-bottom: 1rem; /*Define el espacio fuera del elemento, en la parte inferior*/
}

.title {
    font-size: 3rem;
    text-align: center;
}

#socials-container {
    display: flex;
    justify-content: center;
    margin-top: 1rem; /*Define el espacio fuera del elemento, en la parte superior*/
    gap: 1rem;
}

/*ICONS*/

.icon {
    cursor: pointer;
    height: 2rem;
}

/*BUTTONS*/

.btn-container {
    display: flex;
    justify-content: center;
    gap: 1rem;
}

.btn {
    font-weight: 600;
    transition: all 300ms ease;
    padding: 1rem;
    width: 8rem;
    border-radius: 2rem; /*Define el radio de las esquinas del elemento*/
}

.btn-color-1,
.btn-color-2 {
    border: rgb(53, 53, 53) 0.1rem solid;
}

.btn-color-1:hover,
.btn-color-2:hover {
    cursor: pointer;
}

.btn-color-1,
.btn-color-2:hover {
    background: rgb(53, 53, 53); 
    color: white;
}

.btn-color-1:hover {
    background: rgb(0, 0, 0);
}

.btn-color-2 {
    background: none;
}

.btn-color-2:hover {
    border: rgb(255, 255, 255) 0.1rem solid;
}

.btn-container {
    gap: 1rem;
}